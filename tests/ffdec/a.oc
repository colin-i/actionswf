
format elfobj64

importx "_exit" exit

einclude "../../dev/import.oh"

include "../entryraw.oc" "../entry.oc"
sd f
if argc=1
	set f (prexx_flags|flagpre_mix) #also prexx_flag to test flagpre_mix
	#pool read write is only for test, the real test for them was at first test, here to fast work not needing unique strings
else
	importx "puts" puts
	call puts("flag_alt flag_pool_uread")
	or f (flag_alt|flag_pool_uread)        #if with log, only to test
	sub a1# (0x30)
	or f a1#
end

call swf_new_ex("a.swf",0x80,0x80,0x001100,2,f)

sd fo;set fo swf_font_basic("_sans")
char ButtonData_a="Submit"
data ButtonData={0x11FF11ff,10,0x11FF1188, 0xaa1122ff,10,0xaa112288, 0x1122FFff,10,0x1122FF88, 24,24}
vstr *^ButtonData_a
data ButtonData_c#1;set ButtonData_c fo;data *=20
data vert_off=-5
data *font_color=0xff
vstr ButtonData_d#1;set ButtonData_d "var a;a=1"
call swf_button(150,50,#ButtonData)

call action("
function c(){
}
function cc(a){
}
function ccc(a,b){
}
var a;
delete a;
delete a.b;
var a=2;
a=3;
a.b=4;
a=ccc(1,2);
b.ccc(1,2);

a=new c();

//a+=2; will go to eval
//a=a+2; will go to PushDuplicate that will go to eval
a=eval('a')+2;

a=1+(1+1)+a+a.b-1*1/1%1&1|1^1<<1>>1>>>1&&1||1;

a[0]=1;
a[b]=1;
a='b';
a=1.1;

//a++; will go to eval
//a--; will go to eval

if(a==8){}
if(a!=1){}
if(a>1){}
if(a<1){}
if(a>=1){a=5;}
else if(a<=1){a=3;}
else{a=4;}

while(a<9){a=eval('a')+1;}

a=a==2?b:c;

a=function(){return 2;}

while(a<9){if(a==1){a=2;}else if(a==2){continue;}else if(a==4){break;}else{a=6;}}

for(i=0;i<2;i=1+i){
	if(a==1){a=2;}else if(a==2){continue;}
}

for(a in b){c=1+c;}
")
#call actiond("for(a in b){c=1+c;}") will be ""b"" and here straight "b"
call action("return 1")

sd id;set id swf_sprite_new()
call action_init_sprite(id,"var a=a")
call swf_sprite_done(id)

call swf_done()

call exit(0)
