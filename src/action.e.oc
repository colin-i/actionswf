Format ElfObj64

include "../include/prog.oh"
include "../include/throw.h" "../include/throw.oh"

import "for_in_ptr" for_in_ptr
import "is_ainit" is_ainit

import "ebase" ebase
#aftercallimport ebool

#this/an action

import "action_local" action_local
import "actionf_local" actionf_local

functionX action(ss ac)
	base globala.jmp_data;call ebase(globala.jmp_data)
#ss ac       actionscript string to be parsed
	call is_ainit((xlog_ainit_false))
	callg action_local(ac)
endfunction
#see at part_done functionX action_init(ss ac)
functionXv actionf(ss buffer,ss *format)
	base globala.jmp_data;call ebase(globala.jmp_data)
#ss buffer   the buffer where to sprintf the format and the arguments
#ss format   the format
#...         % arguments here
	call is_ainit((xlog_ainit_false))
	callg actionf_local(#buffer)
endfunction
#see at part_done functionXv actionf_init(ss buffer,ss *format)
functionX actiond(ss ac) #deprecated
	sd ptr;set ptr for_in_ptr()
	sd was;set was ptr#
	set ptr# (flag_forin1)
	call action(ac)
	set ptr# was
end

#sprite

import "action_sprite_base" action_sprite_base

functionX action_sprite(sd sprite,ss actions)
	base globala.jmp_data;call ebase(globala.jmp_data)
#sd sprite    sprite id
#ss actions   same as action
	call is_ainit((xlog_ainit_false))
	callg action_sprite_base(sprite,actions,(TRUE))
endfunction
functionX action_init_sprite(sd sprite,ss actions)
	base globala.jmp_data;call ebase(globala.jmp_data)
	call is_ainit((xlog_ainit_true))
	callg action_sprite_base(sprite,actions,(TRUE))
end
import "actionf_sprite_local" actionf_sprite_local
functionXv actionf_sprite(sd sprite,ss buffer,ss *format)
	base globala.jmp_data;call ebase(globala.jmp_data)
#sd sprite    sprite id
#ss buffer    same as actionf
#ss format    same as actionf
	call is_ainit((xlog_ainit_false))
	callg actionf_sprite_local(sprite,#buffer)
endfunction
functionXv actionf_init_sprite(sd sprite,ss buffer,ss *format)
	base globala.jmp_data;call ebase(globala.jmp_data)
	call is_ainit((xlog_ainit_true))
	callg actionf_sprite_local(sprite,#buffer)
end

entryraw globala()
