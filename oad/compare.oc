
format elfobj64

importx "strlen" strlen
importx "malloc" malloc
importx "memcpy" memcpy
importx "fopen" fopen
importx "free" free
importx "fclose" fclose

override include_sec 1
include "common.h" "common.h.oh"

#multithread unsafe
valueu presprites_size#1  #same as sprites_size, but add 4 more for less calculation
#

char inter_extension_data=".data";vstr p_inter_extension_data^inter_extension_data
function inter_extension(sv psize)
	set psize# (\global.inter_extension_data)
	return global.p_inter_extension_data
end
function compare(ss swf_fullpath)
	sd size;set size strlen(swf_fullpath)
	sd size1=\global.inter_extension_data
	add size1 size
	sd prev;set prev malloc(size1)
	if prev!=(NULL)
		call memcpy(prev,swf_fullpath,size)
		sub size1 size
		add size prev
		call memcpy(size,global.p_inter_extension_data,size1)
		sd file
		set file fopen(prev,"rb")
		call free(prev)
		if file!=(NULL) #will mark diffs
			call fclose(file)
		#else will mark all
		end
		return (EXIT_SUCCESS)
	end
	return (EXIT_FAILURE)
end

function preoadata_init(sv ppresprites)
	set ppresprites# malloc((sprites_realloc_onepart))
	if ppresprites#!=(NULL)
		set global.presprites_size 0
		return (EXIT_SUCCESS)
	end
	return (EXIT_FAILURE)
end
function preoadata_free(sv presprites)
	if presprites!=(NULL)
		add global.presprites_size presprites
		sv ps;set ps presprites
		while ps!=global.presprites_size
			if ps#!=(NULL)
				call free(ps#)
			end
			incst ps
		end
		call free(presprites)
	end
end

import "re_alloc" re_alloc

#                       wordxu preid
function presprite_init(svu newpointer,sv ppresprites)
	mult newpointer :
	dataxu newsize#1;set newsize newpointer
	add newsize :
	charx ok#1;set ok re_alloc(ppresprites,global.presprites_size,newsize)
	if ok=(EXIT_SUCCESS)
		if newsize>^global.presprites_size   ##example: preid 0 after a sprite preid 2
			set global.presprites_size newsize
		end
		add newpointer ppresprites#
		set newpointer# malloc(\presprite\)
		if newpointer#!=(NULL)
			return (EXIT_SUCCESS)
		end
	end
	return (EXIT_FAILURE)
end

entryraw global()
