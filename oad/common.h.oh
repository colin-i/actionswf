
const NULL=0

const FALSE=0
const TRUE=1

const EXIT_SUCCESS=0
const EXIT_FAILURE=-1

const SEEK_SET=0
const SEEK_END=2

const NewLine=0xa
const CReturn=0xd
const ZeroChar=0x30
const NineChar=0x39
const A=0x41
const F=0x46

override include_sec 1
einclude "../include/xlog.h" "../include/xlog.h.oh" #e? xlog_id is else
include "oadbgdata.h" "oadbgdata.h.oh"

const mark_nothing=-1
const no_index=-1

const sprites_realloc_onepart=10*:
#to be at least 2, for presprites_init; and 1 for sprite_done (root 0 move to final)

function presprite() #presprites_size is intern
	valuexu apreframe#1

	valuexu preframes#1
	dataxu  size#1     #same as parent, at button is extra, here are ui16 frames, copy sprites mechanism that is padded for debugger
end
function preframe()
	valuexu ustrings#1
	dataxu ussize#1  ;#Count=ui16 * :

	valuexu strings#1
	dataxu ssize#1  ;#Count=ui16 * :

	dataxu size#1  #DoAction has ui32 but overall also is a ui32
	value recalculation#1 #can be in ui32, multiple actions with a big pool, or multiple actions constant16 to constant8 reductions. good at log

	valueu abranch#1

	valueu branchpointer#1  #starting from abranch and descending

	#log only
	valueu log_mem#1
	valueu log_size#1
	valueu log_allsize#1
end
function branch()
	valueu cuts#1
	valueu size#1  #here a return undefined DoAction has 8 and a branchcut has 12(16 if aligned), there are no 3 size(tag+end) DoAction from actionswf lib

	valuexu innerbranches#1 #for define functions and for 3rd part
	dataxu isize#1  #same as oadata functions plus for 3rd that is bigger, a jump,push,define at least

	valueu subbranch#1

#	valuexu *action#1   #for mark, after compare
end
function branchcut()
	vdataxu x#1   #ints everywhere and pointers for strings, will not memcpy
	dataxu size#1 #same x size doctrine
end
function ustring()
	valueu base#1
	valueu off#1
	valueu *branch#1
end
function string()
	valueu base#1
	valueu off#1
	valuexu branches#1
end

const from_action=0
const from_show=1

const pad_default=0x100
