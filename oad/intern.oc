
format elfobj64

override include_sec 1
include "common.h" "common.h.oh"

importx "fopen" fopen
importx "fseek" fseek
importx "ftell" ftell
importx "malloc" malloc
importx "fread" fread
importx "fclose" fclose

function fcontent(sd path,sv psize)
	sd f;set f fopen(path,"rb")
	if f!=(NULL)
		call fseek(f,0,(SEEK_END))
		sd size;set size ftell(f)
		if size!=-1
			call fseek(f,0,(SEEK_SET))
			sd mem;set mem malloc(size)
			if mem!=(NULL)
				call fread(mem,size,1,f)
				call fclose(f)
				set psize# size
				return mem
			end
		end
		call fclose(f)
	end
	return (NULL)
end

function memnl(ss log,sv pnext)
	set pnext# 1
	if log#!=(NewLine) #emptyrow
		inc log
		while log#!=(NewLine)
			inc log
		end
		add pnext# log
		dec log
		if log#!=(CReturn)  #an example: ffdec action output is \r\n
			inc log
		end
	else
		add pnext# log
	end
	return log
end
function memdec(ss start,ss end)
	sub end start
	add start end
	sd nr=1
	sd n;sd val=0
	while end>^0
		dec start

		set n start#
		sub n (ZeroChar)
		mult n nr
		add val n

		mult nr 10 #is ok on 32 where sizeof long is 4
		dec end
	end
	return val
end

function loop(ss log,sd *x,sd *xx,sd logsize)
	add logsize log
	if log!=logsize  ##else no action sprites/shows
		sd next
		ss p;set p memnl(log,#next)
		whiletrue
			#[log,p)  #preid
			set log next

			set p memnl(log,#next)
			if log=p
				set log next
				# empty: show/done
				set p memnl(log,#next)
				set log next
				if log=logsize
					return (EXIT_SUCCESS)
				end
				set p memnl(log,#next)
			else
				#ainit
				set log next

				#linesnr
				set p memnl(log,#next)
				ss linesnr;set linesnr memdec(log,p)
				set log next

				while linesnr>^0
					set p memnl(log,#next)
					set log next
					dec linesnr
				end

				#[actions]
				whiletrue
					if log=logsize
						return (EXIT_SUCCESS) #no [more] actions and nothing else
					end
					set p memnl(log,#next)
					ss test;set test log
					inc test    ##first is a digit
					while test!=p
						if test#=(Comma)
							break
						end
						if test#=(VerticalBar) # oaalt is not needing these innerbranchends
							break
						end
						inc test
					end
					if test=p
						break  #[log,p) will continue at preid
					end
					set log next   ##was a row with actions
				end
			end
		end
	end
	return (EXIT_SUCCESS)
end
