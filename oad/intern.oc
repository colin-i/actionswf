
format elfobj64

override include_sec 1
include "common.h" "common.h.oh"

importx "fopen" fopen
importx "fseek" fseek
importx "ftell" ftell
importx "malloc" malloc
importx "fread" fread
importx "fclose" fclose

function fcontent(sd path,sv psize)
	sd f;set f fopen(path,"rb")
	if f!=(NULL)
		call fseek(f,0,(SEEK_END))
		sd size;set size ftell(f)
		if size!=-1
			call fseek(f,0,(SEEK_SET))
			sd mem;set mem malloc(size)
			if mem!=(NULL)
				call fread(mem,size,1,f)
				call fclose(f)
				set psize# size
				return mem
			end
		end
		call fclose(f)
	end
	return (NULL)
end

function memnl(ss log,sv pnext)
	set pnext# 1
	if log#!=(NewLine) #emptyrow
		inc log
		while log#!=(NewLine)
			inc log
		end
		add pnext# log
		dec log
		if log#!=(CReturn)  #an example: ffdec action output is \r\n
			inc log
		end
	else
		add pnext# log
	end
	return log
end
function loop(ss log,sd *x,sd *xx,sd logsize)
	add logsize log
	while log!=logsize
		sd next
		ss p;set p memnl(log,#next) #,(),logsize) #preid
		#[log,p)
		set log next
		# empty: show/done
		# else: ainit,linesnr,lines[,actions]
	end
	return (EXIT_SUCCESS)
end
